@startuml
Abstract Tournament
class Controller
class Team
class Match
class Bracket
class Player
class Main
class Knockout
class Group

Main *-- Controller
Controller *-- Tournament
Tournament "1" <|-- "has a" Knockout
Tournament "1" <|-- "has a" Group
Knockout "1" *--"1"Bracket :contains
Group "1" *-- "many" Match :contains
Bracket "1" *-- "16" Team :contains
Bracket "1" *-- "15" Match :contains
Team "1" *-- "2" Player :contains
Match "1" *-- "2" Team :contains

Main : + control.UI()

Controller : + void UI()
Controller : + void createTournament()
Controller : - private final {static} int CURRENT_YEAR
Controller : - private final {static} int TOURNAMENT_START_TIME
Controller : + void startTournament()
Controller : - private ArrayList<Team>participatingTeams
Controller : - private String tournamentName
Controller : - Scanner scan

Tournament : - private String tournamentWinner
Tournament : - private String tournamentName
Tournament : - private int tournamentStartTime
Tournament : - private ArrayList<Team> teams
Tournament : - private ArrayList<Match> matches
Tournament : + Override toString()
Tournament : # protected Bracket connectedBracket
Tournament : + void saveTournamentData()
Tournament : + void loadTournamentData()
Tournament : + abstract void runTournament()

Knockout : + Override runTournament()
Knockout : - String name
Knockout : - ArrayList<Team>teams

Group : + Override runTournament()
Group : - String name
Group : - ArrayList<Team>teams

Bracket : - private ArrayList<Team>teams
Bracket : - private ArrayList<Match>matches
Bracket : - private ArrayList<Match>temMatches
Bracket : - private final int numberParticipatingTeams
Bracket : - private int roundNumber
Bracket : + void randomSeeding()
Bracket : + void startMatch()
Bracket : + void nextRound()
Bracket : + void matchHistory()
Bracket : + void nextMatchReminder(int currentMatch)

Team : - private final String teamName
Team : - private int totalGoalScore
Team : - private ArrayList<Player>players
Team : + void addPlayer()
Team : + void removePlayer()
Team : + Override toString()

Match : - private String gameTime
Match : + void matchWinner()
Match : + Team randomMatchWinner()
Match : + Override toString()
Match : - private int teamAScore
Match : - private int teamBScore
Match : - private Team teamWinner
Match : - private Team teamA
Match : - private Team teamB

Player : - private String name
Player : + Override toString()
@enduml